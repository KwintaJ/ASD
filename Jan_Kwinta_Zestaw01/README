###############################################################################
#  Autor: Jan Kwinta                                       Krakow, 07.10.2022 #
#  Zestaw01: Stos                                                             #
###############################################################################

* Zawartosc:
_______________________________________________________________________________
Katalog Jan_Kwinta_Zadanie01 zawiera nastepujace pliki:

- README                |   Ten plik 
- Makefile              |   Plik do kompilacji programow
- Stack.cpp             |   Pliki zrodlowe programow
- Generator.cpp         |   |
- ONP.cpp               |   |
- ArrayStack.hpp        |   Pliki naglowkowe
- LinkedStack.hpp       |   |
_______________________________________________________________________________




* Odpowiedzi na pytania:
_______________________________________________________________________________

1. Co to jest stos?
    Stos to abstrakcyjna struktura danych typu LIFO (Last In, First Out).
    Oznacza to, ze dana, ktora jako ostatnia zostala dolozona do stosu bedzie
    pierwsza, ktora go opusci. Vice versa, obiekt dodany do stosu jako 
    pierwszy bedzie ostatnim usunietym ze struktury.

    Stos mozna porownac do ukladanej z pudelek wiezy. Nowy obiekt pakujemy do 
    pudelka i kladziemy na gore wiezy. Nie mozemy bezposrednio dostac sie do
    pudelka ze srodka wiezy - musimy najpierw sciagnac wszystkie pudelka, ktore
    stoja wyzej.

2. Omów przykłady zastosowania stosu?
    Stos jest bardzo szeroko wykorzystywana struktura. Od procesorow, ktore 
    wykorzystuja stos do zapisu rejestrow przez programy wysokopoziomowe, 
    ktore tworza nowa ramke stosu za kazdym wywolaniem funkcji, bloku programu 
    itp. az do przegladarek internetowych zapamietujacych historie za pomoca 
    stosu. Stos jako struktura stosowany jest takze w wielu algorytmach np. 
    grafowych - DFS, szukania sciezki.

3, 4. Dlaczego operacja pop() z std::stack nie zwraca wartości elementu ani 
referencji do elementu?
    Funkcja std::stack::pop jest typu void. Jeżeli funkcja top zwracala by 
    referencje do elementu (ktory wlasnie zostal usuniety ze stosu) 
    dostalibysmy wskaznik wskazujacy na fragment w pamiecy, w ktorym ten 
    element kiedys istnial ale teraz moze tam juz byc cokolwiek. Natomiast
    zwracanie wartosci elementu jest nieoplacalne - potrzebowalibysmy
    wywolac kosntruktor kopiujacy (ktory moze nie byc O(n)!) mozliwe ze 
    calkowicie bez potrzeby. Chcemy, zeby pop() dzialalo w O(1). Rozwazajac
    powyzsze dojdziemy do wniosku, ze optymalniejsze i bezpieczniejsze
    jest dostawanie sie do wierzchu stosu przez top() i usuwanie gornego 
    elementu funkcja void pop().


5. Do czego służy funkcja std::stack::emplace?
    Jest to operacja, która tworzy element w miejscu (in-place) i od razu
    wrzuca ten element na gore stosu. Stworzenie elementu w miejscu oznacza,
    ze nowy element nie jest znikad kopiowany lub przesuwany lecz od razu
    "pojawia sie" na gorze stosu. 
    Roznica pomiedzy std::stack::emplace a std::stack::push polega na tym czy 
    przy wsadzaniu np obiektu klasy na stos uzywany jest konstruktor kopiujacy
    tej klasy czy konstruktor do stworzenia nowej instancji tego obiektu.


_______________________________________________________________________________




* Opisy programow:
_______________________________________________________________________________

--=Zadania od 1 do 5=--

ArrayStack.hpp
    Plik naglowkowy z tablicowa implementacja stosu. 


LinkedStack.hpp
    Plik naglowkowy z wskaznikowa implementacja stosu.


Stack.x
    Program operujacy na zaimplementowanym w cwiczeniach 1 i 2 stosie. 
    Program czyta n instrukcji ze standardowego wejscia i obsluguje je
    wedlug ponizszego formatu:

        A x       -      poloz na stos liczbe x
        D         -      zdejmij element ze stosu i wypisz jego wartosc
                         jezeli stos jest pusty wypisz "EMPTY"
        S         -      wypisz liczbe elementow na stosie

    Obslugujac powyzsze dane zakladamy, ze:
            ->  na stosie moze znajdowac sie naraz 10^6 elementow
            ->  n <= 10^6
            ->  0 <= x <= 10^6


Generator.x
    Program generujacy losowy zestaw danych dla programu "Stack.x" wedlug
    formatu powyzej. Liczba n (liczba instrukcji) jest przekazywana 
    do programu "Generator.x" przez argument jego wywolania. 


ONP.x
    Program zamieniajacy wyrazenie arytmetyczne w zapisie klasycznym na
    zapis tego wyrazenia w Odwrotnej Notacji Polskiej. Program wczytuje dane
    i wypisuje wynik odpowiednio ze standardowego wejscia i na standardowe
    wyjscie.   

    Obslugujac powyzsze dane zakladamy, ze:
            ->  w wejsciowym wyrażeniu występują jedynie nawiasy 
                okrągłe, operatory binarne dodawania, odejmowania,
                mnozenia i dzielenia oraz dodatnie liczby całkowite

            ->  kazda para argumentow na ktore dziala operator
                otoczona jest nawiasami

_______________________________________________________________________________
